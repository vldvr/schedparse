version: '3.8'

services:
  schedparse:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: schedparse_app
    ports:
      - "3434:5000"
    volumes:
      - ./app.py:/app/app.py
      - ./requirements.txt:/app/requirements.txt
      - ./uploads:/app/uploads
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=schedparse_db
      - DB_USER=schedparse_user
      - DB_PASSWORD=your_secure_password_here
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - UPLOAD_FOLDER=/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/cacheStats"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    # Install curl and dependencies for healthcheck
    command: >
      bash -c "apt-get update && apt-get install -y curl && 
      pip install --no-cache-dir -r requirements.txt && 
      python app.py"

  postgres:
    image: postgres:15-alpine
    container_name: schedparse_postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=schedparse_db
      - POSTGRES_USER=schedparse_user
      - POSTGRES_PASSWORD=your_secure_password_here
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U schedparse_user -d schedparse_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: schedparse_redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres-data:
  redis-data: